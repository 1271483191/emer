<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yunjing.emer.dao.DeliveryDao">
  <resultMap id="BaseResultMap" type="com.yunjing.emer.entity.Delivery">
    <id column="delivery_id" jdbcType="INTEGER" property="deliveryId" />
    <result column="company_id" jdbcType="INTEGER" property="companyId" />
    <result column="ware_ability" jdbcType="DOUBLE" property="wareAbility" />
    <result column="delivery_day" jdbcType="DOUBLE" property="deliveryDay" />
    <result column="range" jdbcType="VARCHAR" property="range" />
    <result column="radius" jdbcType="DOUBLE" property="radius" />
    <result column="delivery_num" jdbcType="INTEGER" property="deliveryNum" />
    <result column="car_num" jdbcType="INTEGER" property="carNum" />
    <result column="delivery_day_real" jdbcType="DOUBLE" property="deliveryDayReal" />
    <result column="state" jdbcType="INTEGER" property="state" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    delivery_id, company_id, ware_ability, delivery_day, `range`, radius, delivery_num, 
    car_num, delivery_day_real, `state`
  </sql>
 <!-- <select id="sumByExample" parameterType="integer" resultMap="BaseResultMap">
    select *
    from delivery
    where company_id = #{cid}
  </select>-->
  <select id="selectDeliveryByCounty" parameterType="com.yunjing.emer.entity.User" resultMap="BaseResultMap" >
    select * from delivery as d,company_info as c
    where d.company_id = c.company_id
    <if test="province != null and type == 1">
      and c.province = #{province}
    </if>
    <if test="province == null">
      and c.province = 'false'
    </if>
    <if test="city != null and type == 2">
      and c.city = #{city}
    </if>
    <if test="city == null">
      and c.city = 'false'
    </if>
    <if test="county != null and type == 3">
      and c.county = #{county}
    </if>
    <if test="county == null">
      and c.county = 'false'
    </if>
  </select>
  <select id="selectDeliveryByCompanyLevel" parameterType="com.yunjing.emer.entity.User" resultMap="BaseResultMap" >
    select * from delivery as d,company_info as c
    where d.company_id = c.company_id
    and c.level >= #{type}
    <if test="province != null and type == 1">
      and c.province = #{province}
    </if>
    <if test="province == null">
      and c.province = 'false'
    </if>
    <if test="city != null and type == 2">
      and c.city = #{city}
    </if>
    <if test="city == null">
      and c.city = 'false'
    </if>
    <if test="county != null and type == 3">
      and c.county = #{county}
    </if>
    <if test="county == null">
      and c.county = 'false'
    </if>
  </select>
  <select id="selectDeliveryByPageDate" resultMap="BaseResultMap" >
    select * from delivery as d,company_info as c
    where d.company_id = c.company_id
    and c.level >= #{user.type}
    and c.time between #{time1} AND #{time2}
    <if test="user.province != null and user.type == 1">
      and c.province = #{user.province}
    </if>
    <if test="user.province == null">
      and c.province = 'false'
    </if>
    <if test="user.city != null and user.type == 2">
      and c.city = #{user.city}
    </if>
    <if test="user.city == null">
      and c.city = 'false'
    </if>
    <if test="user.county != null and user.type == 3">
      and c.county = #{user.county}
    </if>
    <if test="user.county == null">
      and c.county = 'false'
    </if>
  </select>
  <select id="selectByExample" parameterType="com.yunjing.emer.entity.DeliveryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from delivery
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from delivery
    where delivery_id = #{deliveryId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from delivery
    where delivery_id = #{deliveryId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.yunjing.emer.entity.DeliveryExample">
    delete from delivery
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="delivery_id" keyProperty="deliveryId" parameterType="com.yunjing.emer.entity.Delivery" useGeneratedKeys="true">
    insert into delivery (company_id, ware_ability, delivery_day, 
      `range`, radius, delivery_num, 
      car_num, delivery_day_real, `state`
      )
    values (#{companyId,jdbcType=INTEGER}, #{wareAbility,jdbcType=DOUBLE}, #{deliveryDay,jdbcType=DOUBLE}, 
      #{range,jdbcType=VARCHAR}, #{radius,jdbcType=DOUBLE}, #{deliveryNum,jdbcType=INTEGER}, 
      #{carNum,jdbcType=INTEGER}, #{deliveryDayReal,jdbcType=DOUBLE}, #{state,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyColumn="delivery_id" keyProperty="deliveryId" parameterType="com.yunjing.emer.entity.Delivery" useGeneratedKeys="true">
    insert into delivery
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        company_id,
      </if>
      <if test="wareAbility != null">
        ware_ability,
      </if>
      <if test="deliveryDay != null">
        delivery_day,
      </if>
      <if test="range != null">
        `range`,
      </if>
      <if test="radius != null">
        radius,
      </if>
      <if test="deliveryNum != null">
        delivery_num,
      </if>
      <if test="carNum != null">
        car_num,
      </if>
      <if test="deliveryDayReal != null">
        delivery_day_real,
      </if>
      <if test="state != null">
        `state`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="wareAbility != null">
        #{wareAbility,jdbcType=DOUBLE},
      </if>
      <if test="deliveryDay != null">
        #{deliveryDay,jdbcType=DOUBLE},
      </if>
      <if test="range != null">
        #{range,jdbcType=VARCHAR},
      </if>
      <if test="radius != null">
        #{radius,jdbcType=DOUBLE},
      </if>
      <if test="deliveryNum != null">
        #{deliveryNum,jdbcType=INTEGER},
      </if>
      <if test="carNum != null">
        #{carNum,jdbcType=INTEGER},
      </if>
      <if test="deliveryDayReal != null">
        #{deliveryDayReal,jdbcType=DOUBLE},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yunjing.emer.entity.DeliveryExample" resultType="java.lang.Long">
    select count(*) from delivery
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update delivery
    <set>
      <if test="record.deliveryId != null">
        delivery_id = #{record.deliveryId,jdbcType=INTEGER},
      </if>
      <if test="record.companyId != null">
        company_id = #{record.companyId,jdbcType=INTEGER},
      </if>
      <if test="record.wareAbility != null">
        ware_ability = #{record.wareAbility,jdbcType=DOUBLE},
      </if>
      <if test="record.deliveryDay != null">
        delivery_day = #{record.deliveryDay,jdbcType=DOUBLE},
      </if>
      <if test="record.range != null">
        `range` = #{record.range,jdbcType=VARCHAR},
      </if>
      <if test="record.radius != null">
        radius = #{record.radius,jdbcType=DOUBLE},
      </if>
      <if test="record.deliveryNum != null">
        delivery_num = #{record.deliveryNum,jdbcType=INTEGER},
      </if>
      <if test="record.carNum != null">
        car_num = #{record.carNum,jdbcType=INTEGER},
      </if>
      <if test="record.deliveryDayReal != null">
        delivery_day_real = #{record.deliveryDayReal,jdbcType=DOUBLE},
      </if>
      <if test="record.state != null">
        `state` = #{record.state,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update delivery
    set delivery_id = #{record.deliveryId,jdbcType=INTEGER},
      company_id = #{record.companyId,jdbcType=INTEGER},
      ware_ability = #{record.wareAbility,jdbcType=DOUBLE},
      delivery_day = #{record.deliveryDay,jdbcType=DOUBLE},
      `range` = #{record.range,jdbcType=VARCHAR},
      radius = #{record.radius,jdbcType=DOUBLE},
      delivery_num = #{record.deliveryNum,jdbcType=INTEGER},
      car_num = #{record.carNum,jdbcType=INTEGER},
      delivery_day_real = #{record.deliveryDayReal,jdbcType=DOUBLE},
      `state` = #{record.state,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yunjing.emer.entity.Delivery">
    update delivery
    <set>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=INTEGER},
      </if>
      <if test="wareAbility != null">
        ware_ability = #{wareAbility,jdbcType=DOUBLE},
      </if>
      <if test="deliveryDay != null">
        delivery_day = #{deliveryDay,jdbcType=DOUBLE},
      </if>
      <if test="range != null">
        `range` = #{range,jdbcType=VARCHAR},
      </if>
      <if test="radius != null">
        radius = #{radius,jdbcType=DOUBLE},
      </if>
      <if test="deliveryNum != null">
        delivery_num = #{deliveryNum,jdbcType=INTEGER},
      </if>
      <if test="carNum != null">
        car_num = #{carNum,jdbcType=INTEGER},
      </if>
      <if test="deliveryDayReal != null">
        delivery_day_real = #{deliveryDayReal,jdbcType=DOUBLE},
      </if>
      <if test="state != null">
        `state` = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where delivery_id = #{deliveryId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yunjing.emer.entity.Delivery">
    update delivery
    set company_id = #{companyId,jdbcType=INTEGER},
      ware_ability = #{wareAbility,jdbcType=DOUBLE},
      delivery_day = #{deliveryDay,jdbcType=DOUBLE},
      `range` = #{range,jdbcType=VARCHAR},
      radius = #{radius,jdbcType=DOUBLE},
      delivery_num = #{deliveryNum,jdbcType=INTEGER},
      car_num = #{carNum,jdbcType=INTEGER},
      delivery_day_real = #{deliveryDayReal,jdbcType=DOUBLE},
      `state` = #{state,jdbcType=INTEGER}
    where delivery_id = #{deliveryId,jdbcType=INTEGER}
  </update>
  <select id="sumByProvinceList" resultMap="BaseResultMap">
    select sum(ware_ability) as ware_ability,sum(delivery_day) as delivery_day,
    sum(car_num) as car_num,sum(delivery_day_real) as delivery_day_real from emer.delivery a
    left outer join emer.company_info b on(a.company_id=b.company_id)
    where b.province in
    <foreach collection="list" item="provinces" index="index" open="(" close=")" separator=",">
      #{provinces}
    </foreach>
  </select>
  <select id="sumByProvince" resultMap="BaseResultMap">
    select sum(ware_ability) as ware_ability,sum(delivery_day) as delivery_day,
    sum(car_num) as car_num,sum(delivery_day_real) as delivery_day_real from emer.delivery a
    left outer join emer.company_info b on(a.company_id=b.company_id)
    where b.province = #{province}
  </select>
  <select id="countByProvinceState" resultType="java.lang.Long">
    select count(*)
    from emer.delivery a left outer join emer.company_info b on(a.company_id=b.company_id)
    where b.province = #{province} and a.state = #{state}
  </select>
  <select id="sumByUser" resultMap="BaseResultMap">
    select sum(ware_ability) as ware_ability,sum(delivery_day) as delivery_day,
    sum(car_num) as car_num,sum(delivery_day_real) as delivery_day_real,sum(radius) as radius,sum(delivery_num) as delivery_num from emer.delivery a
    left outer join emer.company_info c on(a.company_id=c.company_id)
    where c.level >= #{type}
    <if test="province != null and type == 1">
      and c.province = #{province}
    </if>
    <if test="province == null">
      and c.province = 'false'
    </if>
    <if test="city != null and type == 2">
      and c.city = #{city}
    </if>
    <if test="city == null">
      and c.city = 'false'
    </if>
    <if test="county != null and type == 3">
      and c.county = #{county}
    </if>
    <if test="county == null">
      and c.county = 'false'
    </if>
  </select>
  <select id="sumByUserAndProvince" resultMap="BaseResultMap">
    select sum(ware_ability) as ware_ability,sum(delivery_day) as delivery_day,
    sum(car_num) as car_num,sum(delivery_day_real) as delivery_day_real,sum(radius) as radius,sum(delivery_num) as delivery_num from emer.delivery a
    left outer join emer.company_info c on(a.company_id=c.company_id)
    where c.level >= #{user.type}
    and c.province = #{province}
  </select>
  <select id="sumByUserAndCity" resultMap="BaseResultMap">
    select sum(ware_ability) as ware_ability,sum(delivery_day) as delivery_day,
    sum(car_num) as car_num,sum(delivery_day_real) as delivery_day_real,sum(radius) as radius,sum(delivery_num) as delivery_num from emer.delivery a
    left outer join emer.company_info c on(a.company_id=c.company_id)
    where c.level >= #{user.type}
    and c.city = #{city}
  </select>
  <select id="sumByUserAndCountry" resultMap="BaseResultMap">
    select sum(ware_ability) as ware_ability,sum(delivery_day) as delivery_day,
    sum(car_num) as car_num,sum(delivery_day_real) as delivery_day_real,sum(radius) as radius,sum(delivery_num) as delivery_num from emer.delivery a
    left outer join emer.company_info c on(a.company_id=c.company_id)
    where c.level >= #{user.type}
    and c.county = #{country}
  </select>
</mapper>